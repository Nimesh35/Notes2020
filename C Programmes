1

/*
	Author      : Ashutosh
	Description : Program to demonstrate c program structure

*/

#include<stdio.h>  // Preprocessor statement
#include<conio.h>
#define MAX 10     // Defines MAX as a constant

int x=30;          // Global variable

void sum();        // function Prototype

int main()         // main function definition
{
	printf("Hello World");
	sum();         // function calling
	
	getch();
	return 0;
}

void sum()         // function Definition
{
	
}

==================================================================================

2

/*
	Author      : Ashutosh
	Description : Program to demonstrate c program structure

*/

#include<stdio.h>  // Preprocessor statement
#include<conio.h>

int main()         // main function definition
{
	//printf("Hello World");
	printf("Hello India");
	//printf("Hello C");
	printf("Welcome to World of c");
	//printf("done");
	
	getch();
	return 0;
}

================================================================================
3

#include<stdio.h>  // Preprocessor statement
#include<conio.h>


int main()         // main function definition
{
	int x   =30;   // x is integer variable
    char c  ='D';  // c is character variable
    float f =1.21; // f is float
    double d=3.14; // d is double
		
	printf("Hello");
	printf("\n");    // \n is escape sequence character , to give new line
    
	printf("%d\n",x);
    printf("%c\n",c);
    printf("%f\n",f);
    printf("%lf\n",d);

	//getch();
	return 0;
}

==============================================================================
4

#include<stdio.h>  // Preprocessor statement
#include<conio.h>


int main()         // main function definition
{
	int x = 30;   // x is integer variable
   	int y = 40;
   	int z;
   	
   	z=x+y;     // Expression
   	
   	printf("x = %d\n",x);     
   	printf("y = %d\n",y);
   	printf("Sum = %d\n",z);
   	
   	printf("\nx = %d , y = %d, x*y = %d\n",x,y,(x*y));
   	
   	printf("Sum of %d and %d is %d ",x,y,(x+y));
   	
   	printf("Division of %d and %d is %d ",y,x,(y/x));
   	
   	
   	
   	 
   	return 0;
}

===========================================================================================
5

#include<stdio.h>  // Preprocessor statement
#include<conio.h>


int main()         // main function definition
{
	float x = 30;   // x is integer variable
   	float y = 20;
   
    //float z;
    
    //z=x/y;
    
    printf("Division is : %f\n",(x/y));
    
    //Q.2
    
    float pi,radius,area;
    pi=3.14; 
    radius=4.1;
    area=pi*radius*radius;
    printf("Area of circle : %f\n",area);
    
    float length=100,breadth=20;
   	float rect_area;
   	
   	rect_area=length*breadth;
   	printf("\nArea of Rectangle : %f",rect_area);
   	
	printf("\nSachin 34");
	    
	printf("\nArea : %f",pi*radius*radius);
     
	return 0;
}

========================================================================================================
6.
#include<stdio.h>
#include<conio.h>

int main()
{
	int var=40,v=50;
	float pi=3.14;
	int y;   // Declaration
	float p;
	
	printf("Value of var = %d\n",var);
	
	printf("Address of var = %x\n",&var);
	
	// 
	printf("Value of v = %d\n",v);
	
	printf("Address of v = %x\n",&v);
		
	printf("Value of pi = %f\n",pi);
	
	printf("Address of pi = %x\n",&pi);
	printf("Address of pi = %u\n",&pi);
	printf("Address of pi = %d\n",&pi);
	
	printf("Value of y = %d",y);
	printf("Value of p = %f",p);
	
	//printf("Value of y = %d",yy);	
	
	
	return 0;
}

=================================================================================

7.
 #include<stdio.h>
#include<conio.h>

int main()
{
	int i=30;
	short x=20;
	char c='A';
	float f=1.2;
	double d=1.3;
	
	printf("Size of integer : %d\n",sizeof(i));  // sizeof operator used to find the size of data type
	                                             // or variable in bytes
	printf("Size of short : %d\n",sizeof(x));
	printf("Size of character : %d\n",sizeof(c));
	printf("Size of float : %d\n",sizeof(f));
	printf("Size of double : %d\n",sizeof(d));
	printf("Size of double : %d\n",sizeof(double));
	
	return 0;
}

===================================================================================

8 .
#include<stdio.h>
#include<conio.h>

int main()
{

	short x=-455;     // -32768 to 32767 (signed) , 0 to 65535 (unsigned)

	long int ls=32;
	
	short int d=3;
	
	printf("Value of x : %d",x);

	printf("Value of x : %ld",ls);

	printf("Value of x : %d",sizeof(ls));
	
	printf("Value of x : %d",d);
	
	printf("Value of x : %d",sizeof(d));
	

	return 0;
}
==========================================================================
9. 
#include<stdio.h>
#include<conio.h>

int main()
{

	short x=-455;     // -32768 to 32767 (signed) , 0 to 65535 (unsigned)

	long int ls=32;
	
	short int d=3;
	
	int y;
	
	printf("Value of x : %d\n",x);

	printf("Value of x : %ld\n",ls);

	printf("Value of x : %d\n",sizeof(ls));
	
	printf("Value of x : %d\n",d);
	
	printf("Value of x : %d\n",sizeof(d));
	
	printf("Value of x : %d",sizeof(y));
	

	return 0;
}
=======================================================================

10.
#include<stdio.h>
#include<conio.h>

int main()
{

	short x=-455;     // -32768 to 32767 (signed) , 0 to 65535 (unsigned)

	long int ls=32;
	
	short int d=3;
	
	int y;
	
	printf("Value of x : %d\n",x);

	printf("Value of x : %ld\n",ls);

	printf("Value of x : %d\n",sizeof(ls));
	
	printf("Value of x : %d\n",d);
	
	printf("Value of x : %d\n",sizeof(d));
	
	printf("Value of x : %d",sizeof(y));
	

	return 0;
}
================================================================

11.
#include<stdio.h>
#include<conio.h>

int main()
{
	printf("%d\n",(5/2));
	
	printf("%f\n",(5.4/2));
	
	printf("%f\n",(5/2.1));
	
	printf("%f\n",(5.4/2.1));
	
	float f=5/2.0;
	
	printf("%f",f);
	
	return 0;
}
=================================================================

12
#include<stdio.h>
#include<conio.h>

int main()
{
	float a=3,b=2;
	
	float res;
	
	//res=(a*a)-(2*a*b)+(b*b);
	
	res=a*a/b*b;     // 3.5 * 1.4* 2.5  = 12.25
	printf("res = %f\n",res);
	
	
	return 0;
}
 
=============================================================================

13
#include<stdio.h>
#include<conio.h>

int main()
{
	int number;
	
	int number1=500;  // compile time initialization
	
	printf("Enter any number : ");
	scanf("%d",&number);        // run time initialization
	
	printf("You entered number : %d\n",number);
	printf("number1 : %d",number1);
	
	return 0;
}

=================================================================================

14

#include<stdio.h>
#include<conio.h>

int main()
{
	int number1,number2,res;
	
	printf("Enter first number : ");
	scanf("%d",&number1);        // run time initialization
	
	printf("Enter second number : ");
	scanf("%d",&number2);        // run time initialization
	
	res=number1+number2;
	
	printf("Sum of %d and %d is %d",number1,number2,res);
	
	return 0;
}

===========================================================================================

15
#include<stdio.h>
#include<conio.h>

int main()
{
	int number1,number2,res;
	
	printf("Enter two numbers : ");
	scanf("%d%d",&number1,&number2);        // run time initialization
	
	res=number1+number2;
	
	printf("Sum of %d and %d is %d",number1,number2,res);
	
	return 0;
}

======================================================================================

16

#include<stdio.h>
#include<conio.h>

int main()
{
	int number;
	char alpha;
	float pi;
	
	printf("Enter number : ");
	scanf("%d",&number);
	
	fflush(stdin);
	printf("Enter alphabet : ");
	scanf("%c",&alpha);
	fflush(stdin);
	
	printf("Enter pi : ");
	scanf("%f",&pi);
	
	printf("Number : %d\t Alphabet : %c\tpi : %f\n",number,alpha,pi);
	return 0;
}

====================================================================

17
#include<stdio.h>
#include<conio.h>

int main()
{
	int a=11,b=2;
	
	float c;
	
	c=a/(float)b;   // 11 /2.0  Type casting
	
	printf("%f\n",c);
	
	float f=5.12;
	int d=f;
	printf("%d\n",d);
	
	
	char alpha='B';
	char aa='a';
	
	printf("%d\n",alpha);
	printf("%d\n",aa);
	
	int temp=alpha;
	printf("%d",temp);
	
	return 0;
}
=============================================================

18
#include<stdio.h>
#include<conio.h>

int main()
{
	/*
    int n1=15;
    int n2=2;
    
    printf("Remainder : %d\n",(n1%n2));
    
    int num=1234;
    
    printf("Last digit : %d\n",num%10);  // returning last digit of number
    
    printf("%f",(float)num/1000);   // removing the last digit of number
    */
    //==================================================================
    
    int x =20;
    
    printf("\n\nPost increment operator\n");
    printf("x = %d\n",x);  // 20
    
    printf("x = %d\n",x++); //20
    
    printf("x = %d\n",x);   //21
    
    int y=30;
    printf("\n\nPre increment operator\n");
    printf("y = %d\n",y);  // 20
    
    printf("y = %d\n",++y); //20
    
    printf("y = %d\n",y);   //21
    
    int z=40;
    
    z++;  // z=40
    z++;  // z=41
    z++;  // z=42
    printf("%d",z++);  // z=43   
    
    printf("%d",z);    // z=44  
    
    ++z;  // z=45
    ++z;  // z=46
    ++z;  // z=47
    printf("%d",++z);  // z=48   
    
    printf("%d",z);    // z=48  
    
    
    
	return 0;
}
===================================================================

19
#include<stdio.h>
#include<conio.h>

int main()
{
	int a,b;
	
	a=10;
	b=(a++)+(++a);
	printf("a = %d  b = %d",a,b);   //12 22   
	
	return 0;
}

============================================================================

20
#include<stdio.h>
#include<conio.h>

int main()
{
	int x=10;
	
	x+=12;  // x=x+12 > x = 10 + 12
	
	printf("x = %d",x);
	
	x-=12;  // x=x-12 > 22 - 12
	
	printf("\nx = %d",x);
	
	
	return 0;
}

===================================================================================

21



#include<stdio.h>
#include<conio.h>

int main()
{
	int x=10;
	int y=20;
	
	// Relational operators
	printf("%d\n",(x<y));
	printf("%d\n",(x>y));
	printf("%d\n",(x<=y));
	printf("%d\n",(x>=y));
	printf("%d\n",(x==y));
	printf("%d",(x!=y));
	
	// Logical operators
	
	printf("\n\n%d",((x>y)&&(x<20)));
	printf("\n\n%d",((x>y)||(x<20)));
	printf("\n\n%d",((x>y)&&(x<20)||(y>40)));
	printf("\n\n%d",(!(x>y)));
	
	// Bitwise operators
	printf("\n\n%d",((x>y)&(x<20)));
	printf("\n\n%d",((x>y)|(x<20)));
	
	
	
	

	// Difference between && and & 
		
	printf("\n\n%d",((5>20)&&(++x<20)));
	printf("\t%d",x);  // x = 11
	
	x=10;
	
	printf("\n\n%d",((5>20)&(++x<20)));	
	printf("\t%d",x);  // x =
	
	return 0;
}

=====================================================================================

22
#include<stdio.h>
#include<conio.h>


void show(); // Does not return any value (void) ; Does not accept any parameter ()

void display(int x); // Does not return any values ; Accepts one parameter value as integer (int x)
                     // x is a parameter
int callme(void); // returning integer value to the function ;does not accept any parameter

float calculate(int a,float b); // returning float value to function; Accepts 2 parameter, 
                                // First parameter is integer, Second parameter is float

int main()
{
	show();    // Calling of show function
	
	display(300);
	
	 printf("%d",callme());
	//printf("\nValue : %d",value);
	
	float f = calculate(20,3.14);
	printf("\nResult : %f",f);
	
	return 0;
}

// Function Definition Starts here

void show()   // function Definition of show function
{
	printf("Welcome to my show function\n");		
}

void display(int x) // display function definition
{
	printf("You passed value : %d\n",x);	
}

int callme(void)   
{
	return 500;	
}

float calculate(int a,float b)
{
	return a+b;
}

==========================================================================

23

#include<stdio.h>
#include<conio.h>

void A()
{
	B();
	printf("In function A\n");	
}

void B()
{
	printf("In function B\n");
	C();
	printf("In function B\n");
}

void C()
{
	printf("In function C\n");
}

int main()
{
	printf("Before calling A\n");
	A();
	printf("\nEnd of main");
	return 0;
}

===================================================================

24

#include<stdio.h>
#include<stdlib.h>
#include<conio.h>

// Example of Recursive function

void A(int x)
{	
	if(x--==0)
		exit(0);
 	printf("Hello\n");
	A(x);
}

int main()
{
	A(2);
	return 0;
}

====================================================

25

#include<stdio.h>
#include<conio.h>

int main()
{
	int num=25;
	
	// if with single statement
	
	if(num<20)      // false - 0  ( 25 < 20 )
		printf("%d is less than 20",num);

    // if with multiple statements
    if(num<20)     // true -1  (25 > 20)
    {
    	printf("%d is greater than 20",num);
		printf("\n%d is odd number",num);	
	}
	
	//  ======  if ...... else
	
	int choice=1;
	
	if(choice!=1)
	{
		printf("You selected choice 1\n");
		printf("Welcome to if...");
	}
	else
	{
		printf("You are in else block");
	}
	
	//==========Use of && using if
	
	printf("\n");
	int n1,n2;
	
	n1=100;
	n2=60;
	
	if((n1>80) && (n2<50))
	{
		printf("Product : %d",(n1*n2));
	}
	else
	{
		printf("Division : %f",(n1/(float)n2));
	}
	
	// compare a character
	printf("\n");
	
	char status;
	
	printf("Enter your status : (y/n) \n");
	scanf("%c",&status);
	
	if(status=='Y' || status=='y')
	{
		printf("Are you confirm ?");
	}
	else
	{
		printf("Please try again!");
	}
	
	//======================================
	printf("\n");
	
	if(0)            // 0 for false and 1 for true
		printf("true");
	else
		printf("false");
	
	return 0;
}

===============================================================================

26

#include<stdio.h>
#include<conio.h>

int main()
{
	int num=25;
	
	if(num<0)
		printf("Number is negative");
	else if(num==10)
		printf("Number is 10");
	else if(num>0)
		printf("Number is positive");
	else
		printf("Number is invalid");
	
	
	return 0;
}

============================================================

27

#include<stdio.h>
#include<conio.h>

int main()
{
	int age=20;
	
	if(age>=18)
	{
		printf("Welcome to C Programming\n");
		if((age>20)&&(age<25))
			printf("You can take Exam XYZ");
		else
			printf("You are elegible for Basic certification in C");
	}
	else
	{
		printf("You are not elegible for exam");
	}
	
	return 0;
}

================================================================

28

#include<stdio.h>
#include<conio.h>


void myfunction(int n);   // Prototype Declaration

int main()
{
	printf("Welcome\n"
	"Hello\n"
	"Hi\n");
	int num;
	printf("Enter any number : ");
	scanf("%d",&num);
	myfunction(num);      // Function Calling
	return 0;
}

void myfunction(int n)     // Function Definition
{
		if((n>0)&&(n<=20))
			printf("%d is in range 0 to 20",n);
		else if((n>20)&&(n<=40))
			printf("%d is in range 20 to 40",n);
		else if((n>40)&&(n<=60))
			printf("%d is in range 40 to 60",n);
		else if((n>60)&&(n<=80))
			printf("%d is in range 60 to 80",n);
		else if((n>80)&&(n<=100))
			printf("%d is in range 80 to 100",n);
		else
			printf("%d is Out of range",n);
}

======================================================================================

30

#include<stdio.h>
#include<conio.h>

int getnum(int x);

void myfunction(int y);

int main()
{
	
	int num = getnum(5);
	printf("Number = %d\n",num);
	
	myfunction(8);
	return 0;
}

int getnum(int x)
{
	return x+10;
}

void myfunction(int y)
{
	printf("Number : %d",(y+10));
}

===================================================================================

31

#include<stdio.h>

int main()
{
	int val=60;
	
	switch(val)
	{
		case 10:
				printf("Value is 10");
				break;
		case 20:
				printf("Value is 20");
				break;
		case 30:
				printf("Value is 30");
				break;
		case 40 :
				printf("Value is 40");
				break;
		default:
				printf("Invalid value");		
	}
	
	printf("End of switch");
	
	//===============================================
	
	printf("\n");
	char ch='A';
	
	switch(ch)
	{
		case 'A' :
				printf("A");
				break;
		case 'B':
				printf("B");
				break;
		case 'C':
				printf("C");
				break;
		case 'D':
				printf("D");
				printf("Welcome");
				break;
		default:
				printf("Invalid value");		
	}
	
	
}
==========================================================================

32

#include<stdio.h>

void Calculation(float x,float y)   // x,y parameters  , x=n1, y=n2
{
	char opr;
	fflush(stdin);
	printf("Press + to Add\n- to Subtract\n* to Multiply\n/ to divide : ");
	scanf("%c",&opr);
	
	switch(opr)
	{
		case '+':
			printf("Sum : %f",(x+y));
			break;
		case '-':
			printf("Subtraction : %f",(x-y));
			break;
		case '*':
			printf("Multiplication : %f",(x*y));
			break;
		case '/':
			printf("Division : %f",(x/y));
			break;
		default:
			printf("Invalid option");
				
	}
}

int main()
{	
	float n1,n2;
	printf("Enter two numbers");
	scanf("%f%f",&n1,&n2);
	Calculation(n1,n2);     // n1 ,n2 arguments
	
	
}
========================================================================

33

#include<stdio.h>
void checkNo(int num)
{
	switch(num)
	{
		case 0 ... 20:
			printf("0<=n<=20");
			break;
		case 21 ... 40:
			printf("21<=n<=40");
			break;
		case 41 ... 60:
			printf("41<=n<=60");
			break;
		case 61 ... 80:
			printf("61<=n<=80");
			break;
		case 81 ... 100:
			printf("81<=n<=100");
			break;
		
		default:
			printf("Invalid option");
	}
}

int main()
{	
	int n;
	printf("Enter any number : ");
	scanf("%d",&n);
	
	checkNo(n);	  // Displaying the range of the passed number
	
	printf("\n");		

	checkNo(23);   
	
}
=======================================================================
34

#include<stdio.h>

int main()
{	
	int x=50;
	
	int result = (x<100)?10:20;
	
	printf("Result : %d",result);	

	printf("\n");
	
	(x<100)?printf("Hello"):printf("Hi");
	
	
}
============================================================================

35
#include<stdio.h>

int main()
{	
	int i; // Loop control variable
	
	for(i=0;i<5;++i)
	{
		printf("Hello\n");	
	}
	
	printf("\n");
	
	for(i=0;i<=5;++i)
	{
		printf("Hello %d\n",i);	
	}	
	
	printf("\n");
	
	for(i=10;i>0;i--)
	{
		printf("i = %d \n",i);	
	}
	printf("\n");
	
	for(i=0;i<=6;i++)
	{
		printf("i = %d \n",i);	
	}
	
	printf("\n");
	for(i=2;i<=20;i=i+2)
	{
		printf("%d\t",i);
	}
	
	printf("\n");
	for(i=0;i<=20;i++)
	{
		if(i%2!=0)
			printf("%d ",i);
	}		
	
	printf("\n");
	for(i=0;i<=20;i++)
	{
		if(i%2!=0)
			printf("*\n");
		else
			printf("#\n");
	}	
	
	printf("\n");
	for(;;)        // Infinite Loop
	{
		printf("%d ",i);
	}
	
}

===============================================================

36

#include<stdio.h>

int main()
{	
	int i,j; 

	for(i=1;i<=5;i++)    // Outer for
	{
		for(j=5;j>=1;j--)  // inner for 
		{
			printf("i = %d\t j = %d\n",i,j);
		}
	}
}

===================================================================

37

#include<stdio.h>

int main()
{	
	int i=1;
	
	while(i<=50)
	{
		printf("%d\n",i);
		i++;
	}
	
	printf("\n");
	i=10;
	while(i>=0)
	{
		printf("%d\n",i);
		i--;
	}
	
	printf("\n");
	i=15;
	while(i!=0)
	{
		printf("%d\n",i);
		i--;
	}

	/*	
	while(1)    // infinite Loop
	{		
		printf("Hi");
	}
	*/
	
	// Prints numbers between 10 and 20
	
	int a = 10;
	int b = 20;
	
	while(a!=b)
	{
		printf("%d\t",a);
		a++;
	}
	
	
}

============================================================

38

#include<stdio.h>

void display()
{
	printf("Hello\n");	
}

int main()
{	
	int i=0;
	int c;
	
	printf("Enter count  :");
	scanf("%d",&c);
	
	while(i<c)
	{
		display();
		i++;
	}
}
============================================================

39

#include<stdio.h>

int main()
{	
	int i=0;
	
	do
	{
		printf("%d\n",i);
		i++;
	}while(i<10);
}

==============================================================

40

#include<stdio.h>

int main()
{	
	int i=0;
	
	while(i<50)
	{
		if(i==30)
			break;
		printf("Value : %d\n",i);
		i++;
	}
	printf("End of while");
}

=============================================================

41

#include<stdio.h>

int main()
{	
	int i=0;
	
	while(i<20)
	{
		i++;
		if(i==5)
			continue;
		
		printf("Value : %d\n",i);
		
	}
	printf("End of while");
}

===================================================================

42

#include<stdio.h>

int global=500;
void fun1()
{
	int x=10;   // Local variable
	printf("%d",x);
	printf("%d",global);
//	printf("%d",y);
}

void fun2()
{
	int y=20;  // Local variable
	printf("%d",global);
}

int main()
{	

	fun1();
	global++;
	fun2();
	printf("%d",global);
	
	
	
	//printf("%d",x);
}


==================================================================================

43
#include<stdio.h>

int getSno()
{
		 int x=10;   // sno is a static variable
		x++;
		return x;
}

int main()
{

	printf("%d\n",getSno());	// 1
	printf("%d\n",getSno());    // 2
	printf("%d\n",getSno());    // 3
	printf("%d\n",getSno());
}

=======================================================================================

44
#include<stdio.h>

int main()
{
	int ages[5];
	
	ages[0]=20;
	ages[1]=22;
	ages[2]=24;
	ages[3]=30;
	ages[4]=25;
	
	printf("Age of Student no %d is : %d\n",1,ages[0]);
	printf("Age of Student no %d is : %d\n",2,ages[1]);
	printf("Age of Student no %d is : %d\n",3,ages[2]);
	printf("Age of Student no %d is : %d\n",4,ages[3]);
	printf("Age of Student no %d is : %d\n",5,ages[4]);
	
}
=================================================================================

45
#include<stdio.h>

int main()
{
	// Declaration & initialization of array in a single line
	int ages[5]={10,20,30,40,50};  // One dimensional array example , [] - subscript , [][] - Multidimesional
	// First way to declare & initialize
	
	
	int numbers[]={1,2,3,4,5,6};
	// Second way to declare & initialize
	
	
	int sno[2];  // Declaration
	
	sno[0]=1;    // Initialization
	sno[1]=2;
	
	
	printf("Address of %d is : %u\n",ages[0],&ages[0]);
	printf("Address of %d is : %u\n",ages[1],&ages[1]);
	printf("Address of %d is : %u\n",ages[2],&ages[2]);
	printf("Address of %d is : %u\n",ages[3],&ages[3]);
	printf("Address of %d is : %u\n",ages[4],&ages[4]);
	
	printf("\n");
	printf("\n");
	char marks[5]={'A','B','C','D','E'};
	
	printf("Address of %c is : %u\n",marks[0],&marks[0]);
	printf("Address of %c is : %u\n",marks[1],&marks[1]);
	printf("Address of %c is : %u\n",marks[2],&marks[2]);
	printf("Address of %c is : %u\n",marks[3],&marks[3]);
	printf("Address of %c is : %u\n",marks[4],&marks[4]);

}

========================================================================

46

#include<stdio.h>

int main()
{
	int numbers[5]={10,30,20};
	
	int i;
	for(i=0;i<5;i++)  // Accessing of Array elements using for loop
	{
		printf("%d ",numbers[i]);  
	}
}
=========================================================================

47

#include<stdio.h>
#define SIZE 4   // Defining Size of array 

int main()
{
	int numbers[SIZE];  // size=4, int numbers[4];
	int i;

	
    
    // Reading array elements
	for(i=0;i<SIZE;i++)
	{
		printf("Enter number : ");
		scanf("%d",&numbers[i]);      // To read values for array       
	}
     // numbers[0] = 20 ,numbers[1] = 30 ,numbers[2] = 40 ,numbers[3] = 60 	
	//  20 30 40 60
	
	printf("Array elements are : ");
	// Printing array elements
	for(i=0;i<SIZE;i++)
	{
		printf("\t%d",numbers[i]);   // To print array values
	}
}
====================================================================================

48

#include<stdio.h>
#define SIZE 5   // Defining Size of array 

int main()
{
	float marks[SIZE];  // size=4, int numbers[4];

	int i;
	
	for(i=0;i<SIZE;i++)
	{
		printf("Enter Marks %d : ",(i+1));
		scanf("%f",&marks[i]);
	}
	
	float sum=0.0;
	for(i=0;i<SIZE;i++)
	{
		sum=sum+marks[i];
	}
	
	float avg;
	
	avg=sum/SIZE;
	
	printf("Average : %f",avg);
}

====================================================================

49

#include<stdio.h>
#define SIZE 5   // Defining Size of array 

int main()
{
	int num[]={1,2,3,4,5};
	
	int i;
	// Printing array elements in reverse order
	for(i=SIZE-1;i>=0;i--)
	{
		printf("%d\t",num[i]);	
	}	
}

=======================================================================

50

#include<stdio.h>
#define SIZE 5   // Defining Size of array 

int main()
{
	// Declaration of 2 D Array
	int matrix[2][2]; // 2 Dimensional array ,first [] shows the no of rows, Second [] shows
	                  // no of columns
	
	matrix[0][0]=10;  // first element [0][0] represents first row ,first column
	matrix[0][1]=20;  // second element [0][1] represents first row ,second column
	matrix[1][0]=30;  // third element [1][0] represents second row ,first column
	matrix[1][1]=40;  // forth element [1][1] represents second row ,second column
	
	int i,j;
	for(i=0;i<2;i++)        // Row 
	{
		for(j=0;j<2;j++)    // Column
		{
			printf("%d ",matrix[i][j]);
		}
		printf("\n");
	}
	
}

==================================================================================

51

#include<stdio.h>
#define SIZE 5   // Defining Size of array 

int main()
{
	// Declaration of 2 D Array and Initialization
	int matrix[2][2]={{1,2},{3,4}};
	
	int i,j;
	for(i=0;i<2;i++)        // Row 
	{
		for(j=0;j<2;j++)    // Column
		{
			printf("%d ",matrix[i][j]);
		}
		printf("\n");
	}
	
}

===========================================================================

52
#include<stdio.h>
#define SIZE 5   // Defining Size of array 

int main()
{
	int num[]={1,2,3,4,5};
	int i;
	for(i=0;i<5;i++)
	{
		printf("%d ",num[i]);
	}
	
	printf("\n");
	num[2]=10;  // Updating 3rd value of array from 3 to 10
	for(i=0;i<5;i++)
	{
		printf("%d ",num[i]);
	}
		
}

========================================================================

53
#include<stdio.h>
#define SIZE 5   // Defining Size of array 

int main()
{
	char name1[]="Sachin";
	
	printf("%s",name1);
	
	printf("\n");	
	char name2[10]="Manish";
	
	printf("%s",name2);
	
	printf("\n");	
	char name3[]={'S','a','u','r','a','b','h','\0'};
	
	printf("%s",name3);
	
	printf("\n");	
	char name4[]={'S','a','t','i','s','h','\0'};
	
	printf("%s",name4);
		
}

==================================================================

54
#include<stdio.h>
#include<string.h>


int main()
{
	char name[30];
		
	printf("Enter your name : ");
	//scanf("%s",name);
	gets(name);  // reads the complete line of string
	//printf("Your name : %s",name);
	
	puts(name); // Print the string value
	
	int len = strlen(name); // strlen() finds the length of string (no of characters)
	
	printf("Length of string : %d",len);
}

===============================================================================

55

#include<stdio.h>
#include<string.h>


int main()
{
	char str1[30]="Welcome to C";
	char str2[30];
	
	puts(str1);
	
	// strcpy(destination,source)
	
	strcpy(str2,str1);  // strcpy() copies a string from str1 to str2
	
	puts(str2);    // puts() prints the value of string
}

========================================================================

56
#include<stdio.h>
#include<string.h>


int main()
{
	char str1[30]="Welcome";
	char str2[30]="Welcome";
	char str3[30]="Hi";
	
	int val = strcmp(str1,str2); // strcmp() function compares twon strings , if strings are equal
	                             // this function returns 0 otherwise returns non zero value
	                             // strcmp returns integer value
	printf("value : %d",val);
	
	if(val==0)
		printf("\nStrings are equal");
	else
		printf("\nStrings are not equal");
		
	
}

======================================================================================

57

#include<stdio.h>
#include<string.h>


int main()
{
	char str1[30]="Hello";
	char str2[30]="World";
	
	// strcat(destination,source)
	
	printf("String before concatenation :\n");
	puts(str1);
	printf("\n");
	puts(str2);
	
	strcat(str1,str2);	// concatenates two strings 
	
	printf("\n\nString after concatenation :\n");
	puts(str1);
	printf("\n");
	puts(str2);
}

==============================================================================

58
#include<stdio.h>
#include<string.h>


int main()
{
	int x=50;
	int y=80;
	int *p1;  
	
	p1=&x;
	printf("Value of x : %d\n",x);
	printf("Value of x : %d\n",*p1);	
	
	printf("Address of x : %d\n",&x);
	printf("Address of x : %d\n",p1);
	printf("Address of p1 : %d",&p1);
	
	p1=&y;
	printf("\n\nValue of y : %d\n",y);
	printf("Value of y : %d\n",*p1);	
	
	printf("Address of y : %d\n",&y);
	printf("Address of y : %d\n",p1);
	printf("Address of p1 : %d",&p1);
	
	char ch='G';
	char *p3=&ch;     // declaration of character pointer with initialization
	printf("\nValue of p3 : %c",*p3);
	
	char ch1='H';
	p3=&ch1;
	printf("\nValue of p3 : %c",*p3);
}

==================================================================================

59

#include<stdio.h>
#include<string.h>


int main()
{
	int *p1,i;
	char *p2,c;
	double *p3,d;
	
	p1=&i;
	p2=&c;
	p3=&d;
	
	printf("Size of i : %d\n",sizeof(i));
	printf("Size of c : %d\n",sizeof(c));
	printf("Size of d : %d\n\n",sizeof(d));
	
	printf("Size of p1 : %d\n",sizeof(p1));
	printf("Size of p2 : %d\n",sizeof(p2));
	printf("Size of p3 : %d\n",sizeof(p3));
}

=========================================================================

60

#include<stdio.h>

int main()
{
	int *p1,i=100;

	p1=&i;
	
	printf("Value of i  : %d\n",i);
	
	*p1=500;     // Modification in i using p1
	
   	printf("Value of i  : %d\n",i);

}

==========================================================================

61

#include<stdio.h>

int main()
{
	int numbers[]={10,20,30,40,50};
	
	printf("%d\n",&numbers[0]);

	printf("%d\n",numbers);    // Displaying address of first element


	// numbers+1 means &numbers[1] : returns addresss of second element of array
	printf("%d\n",numbers+1);

	printf("%d\n",&numbers[1]);
	

	// *(numbers+1) means numbers[1] : returns value at the 2nd index
	printf("%d\n",*(numbers+1));
	
	printf("%d\n",numbers[1]);
	
	printf("\n");
	int i;
	for(i=0;i<5;i++)
	{
		printf("%d\t",*(numbers+i));  // printf("%d\t",numbers[i]);
	}
	
	printf("\n");
	for(i=0;i<5;i++)
	{
		printf("%d\t",(numbers+i));  // printf("%d\t",numbers[i]);
	}
}

==================================================================================

62

#include<stdio.h>

int main()
{
	int numbers[5],sum=0;
	
	printf("Enter 5 numbers : ");
	
	int i;
	
	for(i=0;i<5;i++)
	{
		scanf("%d",numbers+i);
	}

	printf("Array elements are : ");
	for(i=0;i<5;i++)
	{
		printf("\t%d",*(numbers+i));
		sum=sum+(*(numbers+i));
	}	
	
	printf("\nSum of all elements in array : %d",sum);
}

===========================================================================

63

#include<stdio.h>

int main()
{
	int numbers[]={1,2,3,4,5};
	
	int *p1=numbers+2;  // p1 pointing to the 3rd element of array,
	                    // numbers+2 returns address of 3rd element
	
	printf("%d",*p1);   
	
	// Pointer Arithmatic
	
	printf("%d",*(p1+1));  // returns value of 4th index
	
	printf("%d\n",*(p1-1)); // returns value of 2nd index
	
	int i;
	
	p1=numbers+2;
	
	for(i=0;i<5;i++)
	{
		printf("%d ",*(p1+i));   // Accessing of array elements using pointer variable p1
	}
	
	printf("\nSize of Array : %d",sizeof(numbers));
}
=================================================================

64
#include<stdio.h>

int main()
{
	int numbers[]={11,44,32,43,52};
	
	int *p=numbers;
	int i;
	for(i=0;i<5;i++)
	{
		//printf("%d\t",(*(p+i))*2);
		printf("%d\t",(p[i]*2));
		
	}
	
   	printf("\n");
   	
	printf("%d ",*p);  //11
	
	p++;
	
	printf("%d ",*p);   //44

	p++;
	
	printf("%d ",*p);   //32

	p++;
	
	printf("%d ",*p);    //43
	
	p++;
	
	printf("%d ",*p);     //52
	
}

=========================================================================

65

#include<stdio.h>

int main()
{
	char city[]="New Delhi , Bombay";
	
	char *p=city;
	

	while(*p!='\0')       // \0 means Null character
	{
		printf("%c ",*p);
		p++;    // p = p + 1
	}
	
}

=========================================================================

66

#include<stdio.h>
#include<string.h>
int main()
{
	char city[40];
	printf("Enter a City :");
	gets(city);
	
	char *p=city;
	int count=0;

	while(*p!='\0')       // \0 means Null character
	{
		printf("%c",*p);
		count++;
		p++;    // p = p + 1
	}
	
	printf("\n%d",count);
	
	printf("\nLength of city : %d",strlen(city));
	
}

============================================================================

67
#include<stdio.h>

int main()
{
	char *city="New Delhi";   // Pointer to character array
	
	printf("%s",city);
	
	while(*city!='\0')
	{
		printf("%c",*city);
		city++;	
	}	
}

=========================================================================

68

#include<stdio.h>

void myfunction(int v)        // Accepting a value as address in a variable
{
	printf(" Value of v : %d\n",v);   // will print value of v	
	printf("Address of v : %d\n",&v); 
}

void show(int *w)     //  w=p  , Accepting an address in a pointer variable
{
	printf("\n\n Value of x : %d\n",*w);   // will print value of v	 
}

int main()
{
	int x=20;
	int *p;
	
	p=&x;
	
	printf("Address of x : %d\n",&x); 
	
	myfunction(p);    // Passing of pointer variable to a function
	
	show(p);
}
=====================================================================================

69

#include<stdio.h>

void show(int *s,int *t)     //  w=p  , Accepting an address in a pointer variable
{
	printf("Sum : %d\n",*s+*t);   // will print value of v	 
}

int main()
{
	int x=20;
	int y=30;
	
	int *p1;
	p1=&x;
	
	int *p2;
	p2=&y;
		
	show(p1,p2);
}
===========================================================================

70

#include<stdio.h>

void show(int s,int t)             // s=x, t=y;
{
 	printf("\n%d %d",s,t);
}

void display(int *s,int *t)     // s = &x, t = &y
{
 	printf("\n%d %d",*s,*t);
}


int main()
{
	int x=20;
	int y=30;
	
	show(x,y);             // call by value

	display(&x,&y);        // Call by address
}

========================================================================

71

#include<stdio.h>

void show(int s)             // s=x, t=y;
{
 	s++;
}

void display(int *s)     // s = &x, t = &y
{
	(*s)++;
}

int main()
{
	int x=20;
	
	printf("Value of x before calling show() : %d\n",x);
	show(x);
	printf("Value of x after calling show() : %d\n",x);
	
	printf("\n");
	
	printf("Value of x before calling display() : %d\n",x);
	display(&x);
	printf("Value of x after calling display() : %d\n",x);
	display(&x);
	printf("Value of x after calling display() : %d\n",x);
}

===================================================================================

72

#include<stdio.h>


int* show()   // function returning pointer to integer
{
	int *p;    // p is integer pointer
	int x=50;  // x is variable
	p=&x;      // p holds address of x
	return p;  // returning p   , (address of x)
}

int main()
{
	int *s;
		
	s=show();    // s=p=&x
	printf("%d",*s);
	
	
}

===========================================================================

73

#include<stdio.h>
#include<string.h>

char* getName(char *n)        // getName() returning a string value, char *n=name;
{

	char msg[]="Welcome ";
	strcat(msg,n);
	return msg;
}

int main()
{
	char name[30];
	printf("Enter name : ");
	gets(name);
	char *p=getName(name);   
	printf("%s",p);
}

==============================================================================

74

#include<stdio.h>
// Passing an array to the function
// Finding average of array elements
void getAverage(int *p,int size)
{
	int i;
	float avg,sum=0.0;
	int temp=0;
	
	for(i=0;i<size;i++)
	{
		printf("%d ",*(p+i));
		if(p[i]%2==0)
		{
			sum=sum+p[i];
			temp++;
		}
	}
	avg=sum/temp;
	printf("\nAverage of array elements : %f",avg);
}

int main()
{
	int size;
	printf("Enter size : ");
	scanf("%d",&size);
	
	int numbers[size];
	int i;
	
	for(i=0;i<size;i++)
	{
		printf("Enter no %d : ",(i+1));
		scanf("%d",&numbers[i]);
	}
	
	getAverage(numbers,size);   // Paasing of array numbers to the function
}

==================================================================================

75

#include<stdio.h>
// function returning array

int* getnum()
{
	int n[]={1,2,3,4,5};
	return n;
}

int main()
{
	int *p=getnum();
	int i;
	for(i=0;i<5;i++)
	{
		printf("%d ",p[i]);
	}
}

==================================================================================


